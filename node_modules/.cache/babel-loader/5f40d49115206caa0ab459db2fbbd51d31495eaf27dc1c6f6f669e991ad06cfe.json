{"ast":null,"code":"var _jsxFileName = \"/home/vpnwan/Documents/GitHub/Router-Site/src/Register.jsx\";\nimport React from 'react';\nimport \"./reg.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet handleSubmit = async e => {\n  e.preventDefault();\n  try {\n    let res = await fetch(\"https://httpbin.org/post\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        mobileNumber: mobileNumber\n      })\n    });\n    let resJson = await res.json();\n    if (res.status === 200) {\n      setName(\"\");\n      setEmail(\"\");\n      setMessage(\"User created successfully\");\n    } else {\n      setMessage(\"Some error occured\");\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport default function Register() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        placeholder: \"Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        placeholder: \"Email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: mobileNumber,\n        placeholder: \"Mobile Number\",\n        onChange: e => setMobileNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 43\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","handleSubmit","e","preventDefault","res","fetch","method","body","JSON","stringify","name","email","mobileNumber","resJson","json","status","setName","setEmail","setMessage","err","console","log","Register","target","value","setMobileNumber","message"],"sources":["/home/vpnwan/Documents/GitHub/Router-Site/src/Register.jsx"],"sourcesContent":["import React from 'react'\nimport \"./reg.css\"\n\nlet handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let res = await fetch(\"https://httpbin.org/post\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          email: email,\n          mobileNumber: mobileNumber,\n        }),\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setName(\"\");\n        setEmail(\"\");\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport default function Register() {\n  return (\n    <div className=\"App\">\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={name}\n        placeholder=\"Name\"\n        onChange={(e) => setName(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        value={email}\n        placeholder=\"Email\"\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        value={mobileNumber}\n        placeholder=\"Mobile Number\"\n        onChange={(e) => setMobileNumber(e.target.value)}\n      />\n\n      <button type=\"submit\">Create</button>\n\n      <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n    </form>\n  </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAA;AAElB,IAAIC,YAAY,GAAG,MAAOC,CAAC,IAAK;EAC5BA,CAAC,CAACC,cAAc,EAAE;EAClB,IAAI;IACF,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,0BAA0B,EAAE;MAChDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAEA,IAAI;QACVC,KAAK,EAAEA,KAAK;QACZC,YAAY,EAAEA;MAChB,CAAC;IACH,CAAC,CAAC;IACF,IAAIC,OAAO,GAAG,MAAMT,GAAG,CAACU,IAAI,EAAE;IAC9B,IAAIV,GAAG,CAACW,MAAM,KAAK,GAAG,EAAE;MACtBC,OAAO,CAAC,EAAE,CAAC;MACXC,QAAQ,CAAC,EAAE,CAAC;MACZC,UAAU,CAAC,2BAA2B,CAAC;IACzC,CAAC,MAAM;MACLA,UAAU,CAAC,oBAAoB,CAAC;IAClC;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;AACF,CAAC;AAEH,eAAe,SAASG,QAAQ,GAAG;EACjC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBACpB;MAAM,QAAQ,EAAErB,YAAa;MAAA,wBAC3B;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAES,IAAK;QACZ,WAAW,EAAC,MAAM;QAClB,QAAQ,EAAGR,CAAC,IAAKc,OAAO,CAACd,CAAC,CAACqB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACzC,eACF;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAEb,KAAM;QACb,WAAW,EAAC,OAAO;QACnB,QAAQ,EAAGT,CAAC,IAAKe,QAAQ,CAACf,CAAC,CAACqB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC1C,eACF;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAEZ,YAAa;QACpB,WAAW,EAAC,eAAe;QAC3B,QAAQ,EAAGV,CAAC,IAAKuB,eAAe,CAACvB,CAAC,CAACqB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACjD,eAEF;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eAErC;QAAK,SAAS,EAAC,SAAS;QAAA,UAAEE,OAAO,gBAAG;UAAA,UAAIA;QAAO;UAAA;UAAA;UAAA;QAAA,QAAK,GAAG;MAAI;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA;EAC7D;IAAA;IAAA;IAAA;EAAA,QACH;AAER;AAAC,KA7BuBJ,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}